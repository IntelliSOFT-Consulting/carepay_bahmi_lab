/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.12
 * Generated at: 2021-07-01 06:49:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import us.mn.state.health.lims.common.util.ConfigurationProperties.Property;
import us.mn.state.health.lims.common.util.SystemConfiguration;
import us.mn.state.health.lims.common.action.IActionConstants;
import us.mn.state.health.lims.login.valueholder.UserSessionData;
import us.mn.state.health.lims.common.util.ConfigurationProperties;

public final class loginHeader_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


      String path = "";
      String basePath = "";
      String bannerStyle = null;
      UserSessionData usd = null;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/struts-logic.tld", Long.valueOf(1625121650000L));
    _jspx_dependants.put("/WEB-INF/struts-html.tld", Long.valueOf(1625121650000L));
    _jspx_dependants.put("/WEB-INF/struts-bean.tld", Long.valueOf(1625121650000L));
    _jspx_dependants.put("/WEB-INF/labdev-view.tld", Long.valueOf(1625121650000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

      path = request.getContextPath();
      basePath = path + "/";
	  bannerStyle = SystemConfiguration.getInstance().getBannerStyle();
	  
	  if ( request.getSession().getAttribute(IActionConstants.USER_SESSION_DATA) != null ) {
        usd = (UserSessionData)request.getSession().getAttribute(IActionConstants.USER_SESSION_DATA);
    

      out.write('\r');
      out.write('\n');

	if (bannerStyle == SystemConfiguration.DEFAULT_BANNER_STYLE) {

      out.write("\r\n");
      out.write("\r\n");
      out.write("<table cellspacing=\"1\" cellPadding=\"0\" width=\"100%\">\r\n");
      out.write("  <tbody>\r\n");
      out.write("   <tr>\r\n");
      out.write("    <td align=\"left\">\r\n");
      out.write("        ");
      if (_jspx_meth_bean_005fmessage_005f0(_jspx_page_context))
        return;
      out.write(":&nbsp;");
      out.print(ConfigurationProperties.getInstance().getPropertyValue(Property.releaseNumber));
      out.write("\r\n");
      out.write("    </td>\r\n");
      out.write("       <td align=\"right\">\r\n");
      out.write("           ");
      if (_jspx_meth_bean_005fmessage_005f1(_jspx_page_context))
        return;
      out.write(":&nbsp;<b>");
      out.print(usd.getElisUserName());
      out.write("</b>\r\n");
      out.write("       </td>\r\n");
      out.write("        \r\n");
      out.write("    ");
 } else {
      out.write("\r\n");
      out.write("        <td>\r\n");
      out.write("           &nbsp;\r\n");
      out.write("       </td>\r\n");
      out.write("       ");
 } 
      out.write("\r\n");
      out.write("   </tr>\r\n");
      out.write("  </tbody>\r\n");
      out.write("</table>\r\n");
 } 
      out.write('\r');
      out.write('\n');

    if ( usd != null ) {
        int timeOut = usd.getUserTimeOut();
        
        org.apache.struts.util.PropertyMessageResources myMessages = 
            (org.apache.struts.util.PropertyMessageResources)request.getAttribute("org.apache.struts.action.MESSAGE"); 
        
        String key1 = "login.session.timeout.message";  
        String key2 = "login.error.session.message";
        
        java.util.Locale myLocale = (java.util.Locale)session.getAttribute("org.apache.struts.action.LOCALE");
        String message1 = (String)myMessages.getMessage(myLocale, key1);
        String message2 = (String)myMessages.getMessage(myLocale, key2);

      out.write("    \r\n");
      out.write("\r\n");
      out.write("<SCRIPT LANGUAGE=\"JavaScript1.2\">\r\n");
      out.write("    var targetURL=\"");
      out.print(request.getContextPath());
      out.write("\" + \"/LoginPage.do\";\r\n");
      out.write("    var milliseconds=\"");
      out.print(timeOut);
      out.write("\";\r\n");
      out.write("    \r\n");
      out.write("    var sec = 00;\r\n");
      out.write("    var min = milliseconds/60;\r\n");
      out.write("\r\n");
      out.write("    function countDown() {\r\n");
      out.write("        sec--;\r\n");
      out.write("        if (sec == -01) {\r\n");
      out.write("            sec = 59;\r\n");
      out.write("            min = min - 1;\r\n");
      out.write("        } else {\r\n");
      out.write("            min = min;\r\n");
      out.write("        }\r\n");
      out.write("        if (sec<=9) { \r\n");
      out.write("            sec = \"0\" + sec; \r\n");
      out.write("        }\r\n");
      out.write("        time = (min<=9 ? \"0\" + min : min) + \":\" + sec;\r\n");
      out.write("        window.status = '");
      out.print(message1);
      out.write(" ' + time;\r\n");
      out.write("        SD=window.setTimeout(\"countDown();\", 1000);\r\n");
      out.write("        if (min == '00' && sec == '00') { \r\n");
      out.write("            sec = \"00\"; \r\n");
      out.write("            window.clearTimeout(SD);\r\n");
      out.write("            window.status = '");
      out.print(message2);
      out.write("';\r\n");
      out.write("            alert('");
      out.print(message2);
      out.write("');\r\n");
      out.write("            window.location=targetURL; \r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    countDown();\r\n");
      out.write("\r\n");
      out.write("</SCRIPT> \r\n");
      out.write("\r\n");
      
    }    

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_bean_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f0 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    _jspx_th_bean_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_bean_005fmessage_005f0.setParent(null);
    // /pages/common/loginHeader.jsp(36,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_bean_005fmessage_005f0.setKey("ellis.version");
    int _jspx_eval_bean_005fmessage_005f0 = _jspx_th_bean_005fmessage_005f0.doStartTag();
    if (_jspx_th_bean_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_bean_005fmessage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_bean_005fmessage_005f0);
    return false;
  }

  private boolean _jspx_meth_bean_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f1 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    _jspx_th_bean_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_bean_005fmessage_005f1.setParent(null);
    // /pages/common/loginHeader.jsp(39,11) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_bean_005fmessage_005f1.setKey("ellis.login.user.name");
    int _jspx_eval_bean_005fmessage_005f1 = _jspx_th_bean_005fmessage_005f1.doStartTag();
    if (_jspx_th_bean_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_bean_005fmessage_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_bean_005fmessage_005f1);
    return false;
  }
}
